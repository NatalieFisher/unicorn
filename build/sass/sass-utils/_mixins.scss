/*------------------------------------*\
    #Mixins
\*------------------------------------*/


// Clearfix - Usage: @include clearfix();
@mixin clearfix() {
    & {
        *zoom: 1;
    }

    &:before, &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

// PX to EM - Usage: font-size: rem(37px);
@function rem($px, $base: $base-font-size) {
    @return ($px / $base) * 1rem;
}

// Opacity - Usage: @include opacity(0.8);
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
}

// Usage: @include background-cover;
@mixin background-cover {
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

// Vertical Align Anything
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
}

// Transitions - Usage: @include transition(all .2s ease);
@mixin transition($args...) {
    -webkit-transition: $args;
       -moz-transition: $args;
        -ms-transition: $args;
         -o-transition: $args;
            transition: $args;
}

// Retina Background Images - Usage: @include background-image-retina(logo, png);
@mixin background-image-retina($file, $type) {
    background-image: url($file + '.' + $type);
    @media only screen and (-webkit-min-device-pixel-ratio: 2),
        only screen and (-moz-min-device-pixel-ratio: 2),
        only screen and (-o-min-device-pixel-ratio: 2/1),
        only screen and (min-device-pixel-ratio: 2),
        only screen and (min-resolution: 192dpi),
        only screen and (min-resolution: 2dppx){
        & {
            background-image: url($file + '@2x.' + $type);
        }
    }
}
